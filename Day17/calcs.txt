Register A: 64584136
Register B: 0
Register C: 0

Program: 2,4, 1,2, 7,5, 1,3, 4,3, 5,5, 0,3, 3,0


0000: bst 4 : B = A mod 8
0002: bxl 2 : B = B XOR 2
0004: cdv 5 : C = A / 2^B
0006: bxl 3 : B = B XOR 3
0008: bxc 3 : B = B XOR C
0010: out 5 : out B mod 8
0012: adv 3 : A = A / 2^3 = A = A / 8
0014: jnz 0 : if A != 0 goto 0

So works in 3 bit chunks

0000 take bottom nibble into B
0002 switch middle bit in B
0004 shift A right by B places into C
0006 swap bottom two bits in B
0008 B XOR C into B
0010 output
0012 remove bottom 3 bits
0014 repeat until A is 0


Need to output 2,4,1,2,7,5,1,3,4,3,5,5,0,3,3 ,0

Calc for last digit
     A = 0|abc
0000 B = abc		000	001	010	011	100	101	110	111
0002 B = XOR 010	010	011	000	001	110	111	100	101
0004 C = A / 2^B	000	000	010	001	000	000	000	000
0006 B = B XOR 3	001	000	011	010	101	100	111	110
0008 B = B XOR C	001	000	001	011	101	100	111	110

So abc = 010

     A = 0|010|abc
0000 B = abc		000	001	010	011	100	101	110	111
0002 B = XOR 010	010	011	000	010	110	111	100	101
0004 C = A / 2^B	
